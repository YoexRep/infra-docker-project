name: Terraform

on:
  push:
    paths:
      - 'terraform/**'

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      - name: Terraform Init (S3 backend if configured)
        env:
          TF_VAR_allowed_ssh_cidr: ${{ secrets.ALLOWED_SSH_CIDR }}
          TF_VAR_aws_region: ${{ vars.AWS_REGION || 'us-east-1' }}
          TF_VAR_additional_ssh_cidrs: '["0.0.0.0/0"]'
          TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
          TF_STATE_KEY: ${{ vars.TF_STATE_KEY }}
          TF_STATE_REGION: ${{ vars.TF_STATE_REGION }}
          TF_LOCK_TABLE: ${{ vars.TF_LOCK_TABLE }}
        run: |
          if [ -n "${TF_STATE_BUCKET}" ]; then
            BK_KEY=${TF_STATE_KEY:-infra-docker-project/terraform.tfstate}
            BK_REGION=${TF_STATE_REGION:-${TF_VAR_aws_region}}
            INIT_FLAGS=(
              -backend-config="bucket=${TF_STATE_BUCKET}"
              -backend-config="key=${BK_KEY}"
              -backend-config="region=${BK_REGION}"
              -backend-config="encrypt=true"
            )
            if [ -n "${TF_LOCK_TABLE}" ]; then
              INIT_FLAGS+=( -backend-config="dynamodb_table=${TF_LOCK_TABLE}" )
            fi
            terraform init -input=false "${INIT_FLAGS[@]}"
          else
            echo "No TF_STATE_BUCKET configured; using local backend." >&2
            terraform init -input=false
          fi

      - name: Terraform Plan
        env:
          TF_VAR_allowed_ssh_cidr: ${{ secrets.ALLOWED_SSH_CIDR }}
          TF_VAR_aws_region: ${{ vars.AWS_REGION || 'us-east-1' }}
          TF_VAR_additional_ssh_cidrs: '["0.0.0.0/0"]'
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        env:
          TF_VAR_allowed_ssh_cidr: ${{ secrets.ALLOWED_SSH_CIDR }}
          TF_VAR_aws_region: ${{ vars.AWS_REGION || 'us-east-1' }}
          TF_VAR_additional_ssh_cidrs: '["0.0.0.0/0"]'
        run: terraform apply -input=false -auto-approve tfplan

      - name: Show outputs
        run: terraform output -json


